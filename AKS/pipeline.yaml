trigger: none  # Change this to your branch name if necessary

pool:
  vmImage: 'ubuntu-latest'

variables:
  bkstrgrg: 'MYFIRSTRG'
  bkstrg: 'backendstorageterra'
  bkcontainer: 'terraformstate'
  bkstrgkey: 'terraform.tfstateAKS'

stages:
  - stage: tfvalidate
    jobs:
     - job: validate
       continueOnError: false
       steps:
        - task: TerraformInstaller@1
          displayName: tfinstall
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTaskV4@4
          displayName: init
          inputs:
            provider: 'azurerm'
            command: 'init'
            backendServiceArm: 'MYFIRSTSERVICECONNECTION'
            backendAzureRmResourceGroupName: '$(bkstrgrg)'
            backendAzureRmStorageAccountName: '$(bkstrg)'
            backendAzureRmContainerName: '$(bkcontainer)'
            backendAzureRmKey: '$(bkstrgkey)'
            workingDirectory: 'AKS'
        - task: TerraformTaskV4@4
          displayName: validate
          inputs:
            provider: 'azurerm'
            command: 'validate'
        
  - stage: tfdeploy
    condition: succeeded('tfvalidate')
    dependsOn: tfvalidate
    jobs:
      - job: apply
        steps:
          - task: TerraformInstaller@1
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'MYFIRSTSERVICECONNECTION'
              backendAzureRmResourceGroupName: '$(bkstrgrg)'
              backendAzureRmStorageAccountName: '$(bkstrg)'
              backendAzureRmContainerName: '$(bkcontainer)'
              backendAzureRmKey: '$(bkstrgkey)'
              workingDirectory: 'AKS'
          
              
          - task: TerraformTaskV4@4
            displayName: plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: 'MYFIRSTSERVICECONNECTION'
              workingDirectory: 'AKS'
          
          - task: TerraformTaskV4@4
            displayName: apply
            inputs:
              provider: 'azurerm'
              command: 'destroy'
              environmentServiceNameAzureRM: 'MYFIRSTSERVICECONNECTION'
              workingDirectory: 'AKS'